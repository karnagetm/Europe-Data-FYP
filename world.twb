<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20233.23.1017.0948                               -->
<workbook original-version='18.1' source-build='2023.3.0 (20233.23.1017.0948)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelExtractV2.true...ObjectModelExtractV2 />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='CLASS' inline='true' name='federated.0w6dtly0ocn04e1buwsbu0op0sv9' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Country' name='textscan.0aeitup0mj5xhw18f5yec1ltdwpd'>
            <connection class='textscan' directory='C:/Users/KP/Downloads' filename='Country.csv' password='' server='' />
          </named-connection>
          <named-connection caption='Indicators' name='textscan.03mg3hm16j0lvz10c1mgm12p88oz'>
            <connection class='textscan' directory='C:/Users/KP/Downloads' filename='Indicators.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.0aeitup0mj5xhw18f5yec1ltdwpd' name='Country.csv' table='[Country#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_GB' separator=','>
            <column datatype='string' name='CountryCode' ordinal='0' />
            <column datatype='string' name='ShortName' ordinal='1' />
            <column datatype='string' name='TableName' ordinal='2' />
            <column datatype='string' name='LongName' ordinal='3' />
            <column datatype='string' name='Alpha2Code' ordinal='4' />
            <column datatype='string' name='CurrencyUnit' ordinal='5' />
            <column datatype='string' name='SpecialNotes' ordinal='6' />
            <column datatype='string' name='Region' ordinal='7' />
            <column datatype='string' name='IncomeGroup' ordinal='8' />
            <column datatype='string' name='Wb2Code' ordinal='9' />
            <column datatype='string' name='NationalAccountsBaseYear' ordinal='10' />
            <column datatype='integer' name='NationalAccountsReferenceYear' ordinal='11' />
            <column datatype='string' name='SnaPriceValuation' ordinal='12' />
            <column datatype='string' name='LendingCategory' ordinal='13' />
            <column datatype='string' name='OtherGroups' ordinal='14' />
            <column datatype='string' name='SystemOfNationalAccounts' ordinal='15' />
            <column datatype='string' name='AlternativeConversionFactor' ordinal='16' />
            <column datatype='string' name='PppSurveyYear' ordinal='17' />
            <column datatype='string' name='BalanceOfPaymentsManualInUse' ordinal='18' />
            <column datatype='string' name='ExternalDebtReportingStatus' ordinal='19' />
            <column datatype='string' name='SystemOfTrade' ordinal='20' />
            <column datatype='string' name='GovernmentAccountingConcept' ordinal='21' />
            <column datatype='string' name='ImfDataDisseminationStandard' ordinal='22' />
            <column datatype='integer' name='LatestPopulationCensus' ordinal='23' />
            <column datatype='string' name='LatestHouseholdSurvey' ordinal='24' />
            <column datatype='string' name='SourceOfMostRecentIncomeAndExpenditureData' ordinal='25' />
            <column datatype='string' name='VitalRegistrationComplete' ordinal='26' />
            <column datatype='string' name='LatestAgriculturalCensus' ordinal='27' />
            <column datatype='real' name='LatestIndustrialData' ordinal='28' />
            <column datatype='real' name='LatestTradeData' ordinal='29' />
            <column datatype='real' name='LatestWaterWithdrawalData' ordinal='30' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
          <relation connection='textscan.0aeitup0mj5xhw18f5yec1ltdwpd' name='Country.csv' table='[Country#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_GB' separator=','>
              <column datatype='string' name='CountryCode' ordinal='0' />
              <column datatype='string' name='ShortName' ordinal='1' />
              <column datatype='string' name='TableName' ordinal='2' />
              <column datatype='string' name='LongName' ordinal='3' />
              <column datatype='string' name='Alpha2Code' ordinal='4' />
              <column datatype='string' name='CurrencyUnit' ordinal='5' />
              <column datatype='string' name='SpecialNotes' ordinal='6' />
              <column datatype='string' name='Region' ordinal='7' />
              <column datatype='string' name='IncomeGroup' ordinal='8' />
              <column datatype='string' name='Wb2Code' ordinal='9' />
              <column datatype='string' name='NationalAccountsBaseYear' ordinal='10' />
              <column datatype='integer' name='NationalAccountsReferenceYear' ordinal='11' />
              <column datatype='string' name='SnaPriceValuation' ordinal='12' />
              <column datatype='string' name='LendingCategory' ordinal='13' />
              <column datatype='string' name='OtherGroups' ordinal='14' />
              <column datatype='string' name='SystemOfNationalAccounts' ordinal='15' />
              <column datatype='string' name='AlternativeConversionFactor' ordinal='16' />
              <column datatype='string' name='PppSurveyYear' ordinal='17' />
              <column datatype='string' name='BalanceOfPaymentsManualInUse' ordinal='18' />
              <column datatype='string' name='ExternalDebtReportingStatus' ordinal='19' />
              <column datatype='string' name='SystemOfTrade' ordinal='20' />
              <column datatype='string' name='GovernmentAccountingConcept' ordinal='21' />
              <column datatype='string' name='ImfDataDisseminationStandard' ordinal='22' />
              <column datatype='integer' name='LatestPopulationCensus' ordinal='23' />
              <column datatype='string' name='LatestHouseholdSurvey' ordinal='24' />
              <column datatype='string' name='SourceOfMostRecentIncomeAndExpenditureData' ordinal='25' />
              <column datatype='string' name='VitalRegistrationComplete' ordinal='26' />
              <column datatype='string' name='LatestAgriculturalCensus' ordinal='27' />
              <column datatype='real' name='LatestIndustrialData' ordinal='28' />
              <column datatype='real' name='LatestTradeData' ordinal='29' />
              <column datatype='real' name='LatestWaterWithdrawalData' ordinal='30' />
            </columns>
          </relation>
          <relation connection='textscan.03mg3hm16j0lvz10c1mgm12p88oz' name='Indicators.csv' table='[Indicators#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_GB' separator=','>
              <column datatype='string' name='CountryName' ordinal='0' />
              <column datatype='string' name='CountryCode' ordinal='1' />
              <column datatype='string' name='IndicatorName' ordinal='2' />
              <column datatype='string' name='IndicatorCode' ordinal='3' />
              <column datatype='integer' name='Year' ordinal='4' />
              <column datatype='real' name='Value' ordinal='5' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[Alpha2Code]' value='[Country.csv].[Alpha2Code]' />
          <map key='[AlternativeConversionFactor]' value='[Country.csv].[AlternativeConversionFactor]' />
          <map key='[BalanceOfPaymentsManualInUse]' value='[Country.csv].[BalanceOfPaymentsManualInUse]' />
          <map key='[CountryCode (Indicators.csv)]' value='[Indicators.csv].[CountryCode]' />
          <map key='[CountryCode]' value='[Country.csv].[CountryCode]' />
          <map key='[CountryName]' value='[Indicators.csv].[CountryName]' />
          <map key='[CurrencyUnit]' value='[Country.csv].[CurrencyUnit]' />
          <map key='[ExternalDebtReportingStatus]' value='[Country.csv].[ExternalDebtReportingStatus]' />
          <map key='[GovernmentAccountingConcept]' value='[Country.csv].[GovernmentAccountingConcept]' />
          <map key='[ImfDataDisseminationStandard]' value='[Country.csv].[ImfDataDisseminationStandard]' />
          <map key='[IncomeGroup]' value='[Country.csv].[IncomeGroup]' />
          <map key='[IndicatorCode]' value='[Indicators.csv].[IndicatorCode]' />
          <map key='[IndicatorName]' value='[Indicators.csv].[IndicatorName]' />
          <map key='[LatestAgriculturalCensus]' value='[Country.csv].[LatestAgriculturalCensus]' />
          <map key='[LatestHouseholdSurvey]' value='[Country.csv].[LatestHouseholdSurvey]' />
          <map key='[LatestIndustrialData]' value='[Country.csv].[LatestIndustrialData]' />
          <map key='[LatestPopulationCensus]' value='[Country.csv].[LatestPopulationCensus]' />
          <map key='[LatestTradeData]' value='[Country.csv].[LatestTradeData]' />
          <map key='[LatestWaterWithdrawalData]' value='[Country.csv].[LatestWaterWithdrawalData]' />
          <map key='[LendingCategory]' value='[Country.csv].[LendingCategory]' />
          <map key='[LongName]' value='[Country.csv].[LongName]' />
          <map key='[NationalAccountsBaseYear]' value='[Country.csv].[NationalAccountsBaseYear]' />
          <map key='[NationalAccountsReferenceYear]' value='[Country.csv].[NationalAccountsReferenceYear]' />
          <map key='[OtherGroups]' value='[Country.csv].[OtherGroups]' />
          <map key='[PppSurveyYear]' value='[Country.csv].[PppSurveyYear]' />
          <map key='[Region]' value='[Country.csv].[Region]' />
          <map key='[ShortName]' value='[Country.csv].[ShortName]' />
          <map key='[SnaPriceValuation]' value='[Country.csv].[SnaPriceValuation]' />
          <map key='[SourceOfMostRecentIncomeAndExpenditureData]' value='[Country.csv].[SourceOfMostRecentIncomeAndExpenditureData]' />
          <map key='[SpecialNotes]' value='[Country.csv].[SpecialNotes]' />
          <map key='[SystemOfNationalAccounts]' value='[Country.csv].[SystemOfNationalAccounts]' />
          <map key='[SystemOfTrade]' value='[Country.csv].[SystemOfTrade]' />
          <map key='[TableName]' value='[Country.csv].[TableName]' />
          <map key='[Value]' value='[Indicators.csv].[Value]' />
          <map key='[VitalRegistrationComplete]' value='[Country.csv].[VitalRegistrationComplete]' />
          <map key='[Wb2Code]' value='[Country.csv].[Wb2Code]' />
          <map key='[Year]' value='[Indicators.csv].[Year]' />
        </cols>
        <refresh increment-key='' incremental-updates='false' />
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Country.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;£&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Indicators.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;£&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CountryCode</remote-name>
            <remote-type>129</remote-type>
            <local-name>[CountryCode]</local-name>
            <parent-name>[Country.csv]</parent-name>
            <remote-alias>CountryCode</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Country.csv_DAF13CFA1DD54EC99C1655F66529F7F3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ShortName</remote-name>
            <remote-type>129</remote-type>
            <local-name>[ShortName]</local-name>
            <parent-name>[Country.csv]</parent-name>
            <remote-alias>ShortName</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Country.csv_DAF13CFA1DD54EC99C1655F66529F7F3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TableName</remote-name>
            <remote-type>129</remote-type>
            <local-name>[TableName]</local-name>
            <parent-name>[Country.csv]</parent-name>
            <remote-alias>TableName</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Country.csv_DAF13CFA1DD54EC99C1655F66529F7F3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LongName</remote-name>
            <remote-type>129</remote-type>
            <local-name>[LongName]</local-name>
            <parent-name>[Country.csv]</parent-name>
            <remote-alias>LongName</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Country.csv_DAF13CFA1DD54EC99C1655F66529F7F3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Alpha2Code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Alpha2Code]</local-name>
            <parent-name>[Country.csv]</parent-name>
            <remote-alias>Alpha2Code</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Country.csv_DAF13CFA1DD54EC99C1655F66529F7F3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CurrencyUnit</remote-name>
            <remote-type>129</remote-type>
            <local-name>[CurrencyUnit]</local-name>
            <parent-name>[Country.csv]</parent-name>
            <remote-alias>CurrencyUnit</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Country.csv_DAF13CFA1DD54EC99C1655F66529F7F3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SpecialNotes</remote-name>
            <remote-type>129</remote-type>
            <local-name>[SpecialNotes]</local-name>
            <parent-name>[Country.csv]</parent-name>
            <remote-alias>SpecialNotes</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Country.csv_DAF13CFA1DD54EC99C1655F66529F7F3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[Country.csv]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Country.csv_DAF13CFA1DD54EC99C1655F66529F7F3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>IncomeGroup</remote-name>
            <remote-type>129</remote-type>
            <local-name>[IncomeGroup]</local-name>
            <parent-name>[Country.csv]</parent-name>
            <remote-alias>IncomeGroup</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Country.csv_DAF13CFA1DD54EC99C1655F66529F7F3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Wb2Code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Wb2Code]</local-name>
            <parent-name>[Country.csv]</parent-name>
            <remote-alias>Wb2Code</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Country.csv_DAF13CFA1DD54EC99C1655F66529F7F3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NationalAccountsBaseYear</remote-name>
            <remote-type>129</remote-type>
            <local-name>[NationalAccountsBaseYear]</local-name>
            <parent-name>[Country.csv]</parent-name>
            <remote-alias>NationalAccountsBaseYear</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Country.csv_DAF13CFA1DD54EC99C1655F66529F7F3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NationalAccountsReferenceYear</remote-name>
            <remote-type>20</remote-type>
            <local-name>[NationalAccountsReferenceYear]</local-name>
            <parent-name>[Country.csv]</parent-name>
            <remote-alias>NationalAccountsReferenceYear</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Country.csv_DAF13CFA1DD54EC99C1655F66529F7F3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SnaPriceValuation</remote-name>
            <remote-type>129</remote-type>
            <local-name>[SnaPriceValuation]</local-name>
            <parent-name>[Country.csv]</parent-name>
            <remote-alias>SnaPriceValuation</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Country.csv_DAF13CFA1DD54EC99C1655F66529F7F3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LendingCategory</remote-name>
            <remote-type>129</remote-type>
            <local-name>[LendingCategory]</local-name>
            <parent-name>[Country.csv]</parent-name>
            <remote-alias>LendingCategory</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Country.csv_DAF13CFA1DD54EC99C1655F66529F7F3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>OtherGroups</remote-name>
            <remote-type>129</remote-type>
            <local-name>[OtherGroups]</local-name>
            <parent-name>[Country.csv]</parent-name>
            <remote-alias>OtherGroups</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Country.csv_DAF13CFA1DD54EC99C1655F66529F7F3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SystemOfNationalAccounts</remote-name>
            <remote-type>129</remote-type>
            <local-name>[SystemOfNationalAccounts]</local-name>
            <parent-name>[Country.csv]</parent-name>
            <remote-alias>SystemOfNationalAccounts</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Country.csv_DAF13CFA1DD54EC99C1655F66529F7F3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AlternativeConversionFactor</remote-name>
            <remote-type>129</remote-type>
            <local-name>[AlternativeConversionFactor]</local-name>
            <parent-name>[Country.csv]</parent-name>
            <remote-alias>AlternativeConversionFactor</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Country.csv_DAF13CFA1DD54EC99C1655F66529F7F3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PppSurveyYear</remote-name>
            <remote-type>129</remote-type>
            <local-name>[PppSurveyYear]</local-name>
            <parent-name>[Country.csv]</parent-name>
            <remote-alias>PppSurveyYear</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Country.csv_DAF13CFA1DD54EC99C1655F66529F7F3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BalanceOfPaymentsManualInUse</remote-name>
            <remote-type>129</remote-type>
            <local-name>[BalanceOfPaymentsManualInUse]</local-name>
            <parent-name>[Country.csv]</parent-name>
            <remote-alias>BalanceOfPaymentsManualInUse</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Country.csv_DAF13CFA1DD54EC99C1655F66529F7F3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ExternalDebtReportingStatus</remote-name>
            <remote-type>129</remote-type>
            <local-name>[ExternalDebtReportingStatus]</local-name>
            <parent-name>[Country.csv]</parent-name>
            <remote-alias>ExternalDebtReportingStatus</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Country.csv_DAF13CFA1DD54EC99C1655F66529F7F3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SystemOfTrade</remote-name>
            <remote-type>129</remote-type>
            <local-name>[SystemOfTrade]</local-name>
            <parent-name>[Country.csv]</parent-name>
            <remote-alias>SystemOfTrade</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Country.csv_DAF13CFA1DD54EC99C1655F66529F7F3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GovernmentAccountingConcept</remote-name>
            <remote-type>129</remote-type>
            <local-name>[GovernmentAccountingConcept]</local-name>
            <parent-name>[Country.csv]</parent-name>
            <remote-alias>GovernmentAccountingConcept</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Country.csv_DAF13CFA1DD54EC99C1655F66529F7F3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ImfDataDisseminationStandard</remote-name>
            <remote-type>129</remote-type>
            <local-name>[ImfDataDisseminationStandard]</local-name>
            <parent-name>[Country.csv]</parent-name>
            <remote-alias>ImfDataDisseminationStandard</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Country.csv_DAF13CFA1DD54EC99C1655F66529F7F3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LatestPopulationCensus</remote-name>
            <remote-type>20</remote-type>
            <local-name>[LatestPopulationCensus]</local-name>
            <parent-name>[Country.csv]</parent-name>
            <remote-alias>LatestPopulationCensus</remote-alias>
            <ordinal>23</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Country.csv_DAF13CFA1DD54EC99C1655F66529F7F3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LatestHouseholdSurvey</remote-name>
            <remote-type>129</remote-type>
            <local-name>[LatestHouseholdSurvey]</local-name>
            <parent-name>[Country.csv]</parent-name>
            <remote-alias>LatestHouseholdSurvey</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Country.csv_DAF13CFA1DD54EC99C1655F66529F7F3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SourceOfMostRecentIncomeAndExpenditureData</remote-name>
            <remote-type>129</remote-type>
            <local-name>[SourceOfMostRecentIncomeAndExpenditureData]</local-name>
            <parent-name>[Country.csv]</parent-name>
            <remote-alias>SourceOfMostRecentIncomeAndExpenditureData</remote-alias>
            <ordinal>25</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Country.csv_DAF13CFA1DD54EC99C1655F66529F7F3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>VitalRegistrationComplete</remote-name>
            <remote-type>129</remote-type>
            <local-name>[VitalRegistrationComplete]</local-name>
            <parent-name>[Country.csv]</parent-name>
            <remote-alias>VitalRegistrationComplete</remote-alias>
            <ordinal>26</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Country.csv_DAF13CFA1DD54EC99C1655F66529F7F3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LatestAgriculturalCensus</remote-name>
            <remote-type>129</remote-type>
            <local-name>[LatestAgriculturalCensus]</local-name>
            <parent-name>[Country.csv]</parent-name>
            <remote-alias>LatestAgriculturalCensus</remote-alias>
            <ordinal>27</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Country.csv_DAF13CFA1DD54EC99C1655F66529F7F3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LatestIndustrialData</remote-name>
            <remote-type>5</remote-type>
            <local-name>[LatestIndustrialData]</local-name>
            <parent-name>[Country.csv]</parent-name>
            <remote-alias>LatestIndustrialData</remote-alias>
            <ordinal>28</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Country.csv_DAF13CFA1DD54EC99C1655F66529F7F3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LatestTradeData</remote-name>
            <remote-type>5</remote-type>
            <local-name>[LatestTradeData]</local-name>
            <parent-name>[Country.csv]</parent-name>
            <remote-alias>LatestTradeData</remote-alias>
            <ordinal>29</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Country.csv_DAF13CFA1DD54EC99C1655F66529F7F3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LatestWaterWithdrawalData</remote-name>
            <remote-type>5</remote-type>
            <local-name>[LatestWaterWithdrawalData]</local-name>
            <parent-name>[Country.csv]</parent-name>
            <remote-alias>LatestWaterWithdrawalData</remote-alias>
            <ordinal>30</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Country.csv_DAF13CFA1DD54EC99C1655F66529F7F3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CountryName</remote-name>
            <remote-type>129</remote-type>
            <local-name>[CountryName]</local-name>
            <parent-name>[Indicators.csv]</parent-name>
            <remote-alias>CountryName</remote-alias>
            <ordinal>31</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Indicators.csv_849BCA2D414E49F18C9AFD608CBAF4EF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CountryCode</remote-name>
            <remote-type>129</remote-type>
            <local-name>[CountryCode (Indicators.csv)]</local-name>
            <parent-name>[Indicators.csv]</parent-name>
            <remote-alias>CountryCode</remote-alias>
            <ordinal>32</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Indicators.csv_849BCA2D414E49F18C9AFD608CBAF4EF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>IndicatorName</remote-name>
            <remote-type>129</remote-type>
            <local-name>[IndicatorName]</local-name>
            <parent-name>[Indicators.csv]</parent-name>
            <remote-alias>IndicatorName</remote-alias>
            <ordinal>33</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Indicators.csv_849BCA2D414E49F18C9AFD608CBAF4EF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>IndicatorCode</remote-name>
            <remote-type>129</remote-type>
            <local-name>[IndicatorCode]</local-name>
            <parent-name>[Indicators.csv]</parent-name>
            <remote-alias>IndicatorCode</remote-alias>
            <ordinal>34</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Indicators.csv_849BCA2D414E49F18C9AFD608CBAF4EF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[Indicators.csv]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>35</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Indicators.csv_849BCA2D414E49F18C9AFD608CBAF4EF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Value</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Value]</local-name>
            <parent-name>[Indicators.csv]</parent-name>
            <remote-alias>Value</remote-alias>
            <ordinal>36</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Indicators.csv_849BCA2D414E49F18C9AFD608CBAF4EF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Alternative Conversion Factor' datatype='string' name='[AlternativeConversionFactor]' role='dimension' type='nominal' />
      <column caption='Balance Of Payments Manual In Use' datatype='string' name='[BalanceOfPaymentsManualInUse]' role='dimension' type='nominal' />
      <column datatype='string' name='[CountryCode (Indicators.csv)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Country Code' datatype='string' name='[CountryCode]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Country Name' datatype='string' name='[CountryName]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Currency Unit' datatype='string' name='[CurrencyUnit]' role='dimension' type='nominal' />
      <column caption='External Debt Reporting Status' datatype='string' name='[ExternalDebtReportingStatus]' role='dimension' type='nominal' />
      <column caption='Government Accounting Concept' datatype='string' name='[GovernmentAccountingConcept]' role='dimension' type='nominal' />
      <column caption='Imf Data Dissemination Standard' datatype='string' name='[ImfDataDisseminationStandard]' role='dimension' type='nominal' />
      <column caption='Income Group' datatype='string' name='[IncomeGroup]' role='dimension' type='nominal' />
      <column caption='Indicator Code' datatype='string' name='[IndicatorCode]' role='dimension' type='nominal' />
      <column caption='Indicator Name' datatype='string' name='[IndicatorName]' role='dimension' type='nominal' />
      <column caption='Latest Agricultural Census' datatype='string' name='[LatestAgriculturalCensus]' role='dimension' type='nominal' />
      <column caption='Latest Household Survey' datatype='string' name='[LatestHouseholdSurvey]' role='dimension' type='nominal' />
      <column caption='Latest Industrial Data' datatype='real' name='[LatestIndustrialData]' role='measure' type='quantitative' />
      <column caption='Latest Population Census' datatype='integer' name='[LatestPopulationCensus]' role='measure' type='quantitative' />
      <column caption='Latest Trade Data' datatype='real' name='[LatestTradeData]' role='measure' type='quantitative' />
      <column caption='Latest Water Withdrawal Data' datatype='real' name='[LatestWaterWithdrawalData]' role='measure' type='quantitative' />
      <column caption='Lending Category' datatype='string' name='[LendingCategory]' role='dimension' type='nominal' />
      <column caption='Long Name' datatype='string' name='[LongName]' role='dimension' type='nominal' />
      <column caption='National Accounts Base Year' datatype='string' name='[NationalAccountsBaseYear]' role='dimension' type='nominal' />
      <column caption='National Accounts Reference Year' datatype='integer' name='[NationalAccountsReferenceYear]' role='dimension' type='quantitative' />
      <column caption='Other Groups' datatype='string' name='[OtherGroups]' role='dimension' type='nominal' />
      <column caption='Ppp Survey Year' datatype='string' name='[PppSurveyYear]' role='dimension' type='nominal' />
      <column caption='Short Name' datatype='string' name='[ShortName]' role='dimension' type='nominal' />
      <column caption='Sna Price Valuation' datatype='string' name='[SnaPriceValuation]' role='dimension' type='nominal' />
      <column caption='Source Of Most Recent Income And Expenditure Data' datatype='string' name='[SourceOfMostRecentIncomeAndExpenditureData]' role='dimension' type='nominal' />
      <column caption='Special Notes' datatype='string' name='[SpecialNotes]' role='dimension' type='nominal' />
      <column caption='System Of National Accounts' datatype='string' name='[SystemOfNationalAccounts]' role='dimension' type='nominal' />
      <column caption='System Of Trade' datatype='string' name='[SystemOfTrade]' role='dimension' type='nominal' />
      <column caption='Table Name' datatype='string' name='[TableName]' role='dimension' type='nominal' />
      <column caption='Vital Registration Complete' datatype='string' name='[VitalRegistrationComplete]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Country.csv' datatype='table' name='[__tableau_internal_object_id__].[Country.csv_DAF13CFA1DD54EC99C1655F66529F7F3]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Indicators.csv' datatype='table' name='[__tableau_internal_object_id__].[Indicators.csv_849BCA2D414E49F18C9AFD608CBAF4EF]' role='measure' type='quantitative' />
      <column-instance column='[CountryName]' derivation='None' name='[none:CountryName:nk]' pivot='key' type='nominal' />
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_GB' class='hyper' dbname='C:/Users/KP/Desktop/UNI WORK DESKTOP/FYP/CLASS.hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='04/12/2024 12:23:29 AM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Country.csv_DAF13CFA1DD54EC99C1655F66529F7F3' table='[Extract].[Country.csv_DAF13CFA1DD54EC99C1655F66529F7F3]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
            <relation name='Country.csv_DAF13CFA1DD54EC99C1655F66529F7F3' table='[Extract].[Country.csv_DAF13CFA1DD54EC99C1655F66529F7F3]' type='table' />
            <relation name='Indicators.csv_849BCA2D414E49F18C9AFD608CBAF4EF' table='[Extract].[Indicators.csv_849BCA2D414E49F18C9AFD608CBAF4EF]' type='table' />
          </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
          <cols>
            <map key='[Alpha2Code]' value='[Country.csv_DAF13CFA1DD54EC99C1655F66529F7F3].[Alpha2Code]' />
            <map key='[AlternativeConversionFactor]' value='[Country.csv_DAF13CFA1DD54EC99C1655F66529F7F3].[AlternativeConversionFactor]' />
            <map key='[BalanceOfPaymentsManualInUse]' value='[Country.csv_DAF13CFA1DD54EC99C1655F66529F7F3].[BalanceOfPaymentsManualInUse]' />
            <map key='[CountryCode (Indicators.csv)]' value='[Indicators.csv_849BCA2D414E49F18C9AFD608CBAF4EF].[CountryCode]' />
            <map key='[CountryCode]' value='[Country.csv_DAF13CFA1DD54EC99C1655F66529F7F3].[CountryCode]' />
            <map key='[CountryName]' value='[Indicators.csv_849BCA2D414E49F18C9AFD608CBAF4EF].[CountryName]' />
            <map key='[CurrencyUnit]' value='[Country.csv_DAF13CFA1DD54EC99C1655F66529F7F3].[CurrencyUnit]' />
            <map key='[ExternalDebtReportingStatus]' value='[Country.csv_DAF13CFA1DD54EC99C1655F66529F7F3].[ExternalDebtReportingStatus]' />
            <map key='[GovernmentAccountingConcept]' value='[Country.csv_DAF13CFA1DD54EC99C1655F66529F7F3].[GovernmentAccountingConcept]' />
            <map key='[ImfDataDisseminationStandard]' value='[Country.csv_DAF13CFA1DD54EC99C1655F66529F7F3].[ImfDataDisseminationStandard]' />
            <map key='[IncomeGroup]' value='[Country.csv_DAF13CFA1DD54EC99C1655F66529F7F3].[IncomeGroup]' />
            <map key='[IndicatorCode]' value='[Indicators.csv_849BCA2D414E49F18C9AFD608CBAF4EF].[IndicatorCode]' />
            <map key='[IndicatorName]' value='[Indicators.csv_849BCA2D414E49F18C9AFD608CBAF4EF].[IndicatorName]' />
            <map key='[LatestAgriculturalCensus]' value='[Country.csv_DAF13CFA1DD54EC99C1655F66529F7F3].[LatestAgriculturalCensus]' />
            <map key='[LatestHouseholdSurvey]' value='[Country.csv_DAF13CFA1DD54EC99C1655F66529F7F3].[LatestHouseholdSurvey]' />
            <map key='[LatestIndustrialData]' value='[Country.csv_DAF13CFA1DD54EC99C1655F66529F7F3].[LatestIndustrialData]' />
            <map key='[LatestPopulationCensus]' value='[Country.csv_DAF13CFA1DD54EC99C1655F66529F7F3].[LatestPopulationCensus]' />
            <map key='[LatestTradeData]' value='[Country.csv_DAF13CFA1DD54EC99C1655F66529F7F3].[LatestTradeData]' />
            <map key='[LatestWaterWithdrawalData]' value='[Country.csv_DAF13CFA1DD54EC99C1655F66529F7F3].[LatestWaterWithdrawalData]' />
            <map key='[LendingCategory]' value='[Country.csv_DAF13CFA1DD54EC99C1655F66529F7F3].[LendingCategory]' />
            <map key='[LongName]' value='[Country.csv_DAF13CFA1DD54EC99C1655F66529F7F3].[LongName]' />
            <map key='[NationalAccountsBaseYear]' value='[Country.csv_DAF13CFA1DD54EC99C1655F66529F7F3].[NationalAccountsBaseYear]' />
            <map key='[NationalAccountsReferenceYear]' value='[Country.csv_DAF13CFA1DD54EC99C1655F66529F7F3].[NationalAccountsReferenceYear]' />
            <map key='[OtherGroups]' value='[Country.csv_DAF13CFA1DD54EC99C1655F66529F7F3].[OtherGroups]' />
            <map key='[PppSurveyYear]' value='[Country.csv_DAF13CFA1DD54EC99C1655F66529F7F3].[PppSurveyYear]' />
            <map key='[Region]' value='[Country.csv_DAF13CFA1DD54EC99C1655F66529F7F3].[Region]' />
            <map key='[ShortName]' value='[Country.csv_DAF13CFA1DD54EC99C1655F66529F7F3].[ShortName]' />
            <map key='[SnaPriceValuation]' value='[Country.csv_DAF13CFA1DD54EC99C1655F66529F7F3].[SnaPriceValuation]' />
            <map key='[SourceOfMostRecentIncomeAndExpenditureData]' value='[Country.csv_DAF13CFA1DD54EC99C1655F66529F7F3].[SourceOfMostRecentIncomeAndExpenditureData]' />
            <map key='[SpecialNotes]' value='[Country.csv_DAF13CFA1DD54EC99C1655F66529F7F3].[SpecialNotes]' />
            <map key='[SystemOfNationalAccounts]' value='[Country.csv_DAF13CFA1DD54EC99C1655F66529F7F3].[SystemOfNationalAccounts]' />
            <map key='[SystemOfTrade]' value='[Country.csv_DAF13CFA1DD54EC99C1655F66529F7F3].[SystemOfTrade]' />
            <map key='[TableName]' value='[Country.csv_DAF13CFA1DD54EC99C1655F66529F7F3].[TableName]' />
            <map key='[Value]' value='[Indicators.csv_849BCA2D414E49F18C9AFD608CBAF4EF].[Value]' />
            <map key='[VitalRegistrationComplete]' value='[Country.csv_DAF13CFA1DD54EC99C1655F66529F7F3].[VitalRegistrationComplete]' />
            <map key='[Wb2Code]' value='[Country.csv_DAF13CFA1DD54EC99C1655F66529F7F3].[Wb2Code]' />
            <map key='[Year]' value='[Indicators.csv_849BCA2D414E49F18C9AFD608CBAF4EF].[Year]' />
          </cols>
          <refresh increment-key='' incremental-updates='false'>
            <refresh-event add-from-file-path='CLASS' increment-value='%null%' refresh-type='create' rows-inserted='5656705' timestamp-start='2024-04-12 00:23:19.853' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>CountryCode</remote-name>
              <remote-type>129</remote-type>
              <local-name>[CountryCode]</local-name>
              <parent-name>[Country.csv_DAF13CFA1DD54EC99C1655F66529F7F3]</parent-name>
              <remote-alias>CountryCode</remote-alias>
              <ordinal>0</ordinal>
              <family>Country.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>247</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Country.csv_DAF13CFA1DD54EC99C1655F66529F7F3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>ShortName</remote-name>
              <remote-type>129</remote-type>
              <local-name>[ShortName]</local-name>
              <parent-name>[Country.csv_DAF13CFA1DD54EC99C1655F66529F7F3]</parent-name>
              <remote-alias>ShortName</remote-alias>
              <ordinal>1</ordinal>
              <family>Country.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>247</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Country.csv_DAF13CFA1DD54EC99C1655F66529F7F3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>TableName</remote-name>
              <remote-type>129</remote-type>
              <local-name>[TableName]</local-name>
              <parent-name>[Country.csv_DAF13CFA1DD54EC99C1655F66529F7F3]</parent-name>
              <remote-alias>TableName</remote-alias>
              <ordinal>2</ordinal>
              <family>Country.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>247</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Country.csv_DAF13CFA1DD54EC99C1655F66529F7F3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>LongName</remote-name>
              <remote-type>129</remote-type>
              <local-name>[LongName]</local-name>
              <parent-name>[Country.csv_DAF13CFA1DD54EC99C1655F66529F7F3]</parent-name>
              <remote-alias>LongName</remote-alias>
              <ordinal>3</ordinal>
              <family>Country.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>247</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Country.csv_DAF13CFA1DD54EC99C1655F66529F7F3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Alpha2Code</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Alpha2Code]</local-name>
              <parent-name>[Country.csv_DAF13CFA1DD54EC99C1655F66529F7F3]</parent-name>
              <remote-alias>Alpha2Code</remote-alias>
              <ordinal>4</ordinal>
              <family>Country.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>245</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Country.csv_DAF13CFA1DD54EC99C1655F66529F7F3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>CurrencyUnit</remote-name>
              <remote-type>129</remote-type>
              <local-name>[CurrencyUnit]</local-name>
              <parent-name>[Country.csv_DAF13CFA1DD54EC99C1655F66529F7F3]</parent-name>
              <remote-alias>CurrencyUnit</remote-alias>
              <ordinal>5</ordinal>
              <family>Country.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>150</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Country.csv_DAF13CFA1DD54EC99C1655F66529F7F3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>SpecialNotes</remote-name>
              <remote-type>129</remote-type>
              <local-name>[SpecialNotes]</local-name>
              <parent-name>[Country.csv_DAF13CFA1DD54EC99C1655F66529F7F3]</parent-name>
              <remote-alias>SpecialNotes</remote-alias>
              <ordinal>6</ordinal>
              <family>Country.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>150</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Country.csv_DAF13CFA1DD54EC99C1655F66529F7F3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Region</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Region]</local-name>
              <parent-name>[Country.csv_DAF13CFA1DD54EC99C1655F66529F7F3]</parent-name>
              <remote-alias>Region</remote-alias>
              <ordinal>7</ordinal>
              <family>Country.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>8</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Country.csv_DAF13CFA1DD54EC99C1655F66529F7F3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>IncomeGroup</remote-name>
              <remote-type>129</remote-type>
              <local-name>[IncomeGroup]</local-name>
              <parent-name>[Country.csv_DAF13CFA1DD54EC99C1655F66529F7F3]</parent-name>
              <remote-alias>IncomeGroup</remote-alias>
              <ordinal>8</ordinal>
              <family>Country.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Country.csv_DAF13CFA1DD54EC99C1655F66529F7F3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Wb2Code</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Wb2Code]</local-name>
              <parent-name>[Country.csv_DAF13CFA1DD54EC99C1655F66529F7F3]</parent-name>
              <remote-alias>Wb2Code</remote-alias>
              <ordinal>9</ordinal>
              <family>Country.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>247</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Country.csv_DAF13CFA1DD54EC99C1655F66529F7F3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>NationalAccountsBaseYear</remote-name>
              <remote-type>129</remote-type>
              <local-name>[NationalAccountsBaseYear]</local-name>
              <parent-name>[Country.csv_DAF13CFA1DD54EC99C1655F66529F7F3]</parent-name>
              <remote-alias>NationalAccountsBaseYear</remote-alias>
              <ordinal>10</ordinal>
              <family>Country.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>42</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Country.csv_DAF13CFA1DD54EC99C1655F66529F7F3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>NationalAccountsReferenceYear</remote-name>
              <remote-type>20</remote-type>
              <local-name>[NationalAccountsReferenceYear]</local-name>
              <parent-name>[Country.csv_DAF13CFA1DD54EC99C1655F66529F7F3]</parent-name>
              <remote-alias>NationalAccountsReferenceYear</remote-alias>
              <ordinal>11</ordinal>
              <family>Country.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>10</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Country.csv_DAF13CFA1DD54EC99C1655F66529F7F3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>SnaPriceValuation</remote-name>
              <remote-type>129</remote-type>
              <local-name>[SnaPriceValuation]</local-name>
              <parent-name>[Country.csv_DAF13CFA1DD54EC99C1655F66529F7F3]</parent-name>
              <remote-alias>SnaPriceValuation</remote-alias>
              <ordinal>12</ordinal>
              <family>Country.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Country.csv_DAF13CFA1DD54EC99C1655F66529F7F3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>LendingCategory</remote-name>
              <remote-type>129</remote-type>
              <local-name>[LendingCategory]</local-name>
              <parent-name>[Country.csv_DAF13CFA1DD54EC99C1655F66529F7F3]</parent-name>
              <remote-alias>LendingCategory</remote-alias>
              <ordinal>13</ordinal>
              <family>Country.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Country.csv_DAF13CFA1DD54EC99C1655F66529F7F3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>OtherGroups</remote-name>
              <remote-type>129</remote-type>
              <local-name>[OtherGroups]</local-name>
              <parent-name>[Country.csv_DAF13CFA1DD54EC99C1655F66529F7F3]</parent-name>
              <remote-alias>OtherGroups</remote-alias>
              <ordinal>14</ordinal>
              <family>Country.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Country.csv_DAF13CFA1DD54EC99C1655F66529F7F3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>SystemOfNationalAccounts</remote-name>
              <remote-type>129</remote-type>
              <local-name>[SystemOfNationalAccounts]</local-name>
              <parent-name>[Country.csv_DAF13CFA1DD54EC99C1655F66529F7F3]</parent-name>
              <remote-alias>SystemOfNationalAccounts</remote-alias>
              <ordinal>15</ordinal>
              <family>Country.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Country.csv_DAF13CFA1DD54EC99C1655F66529F7F3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>AlternativeConversionFactor</remote-name>
              <remote-type>129</remote-type>
              <local-name>[AlternativeConversionFactor]</local-name>
              <parent-name>[Country.csv_DAF13CFA1DD54EC99C1655F66529F7F3]</parent-name>
              <remote-alias>AlternativeConversionFactor</remote-alias>
              <ordinal>16</ordinal>
              <family>Country.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>33</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Country.csv_DAF13CFA1DD54EC99C1655F66529F7F3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>PppSurveyYear</remote-name>
              <remote-type>129</remote-type>
              <local-name>[PppSurveyYear]</local-name>
              <parent-name>[Country.csv_DAF13CFA1DD54EC99C1655F66529F7F3]</parent-name>
              <remote-alias>PppSurveyYear</remote-alias>
              <ordinal>17</ordinal>
              <family>Country.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Country.csv_DAF13CFA1DD54EC99C1655F66529F7F3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>BalanceOfPaymentsManualInUse</remote-name>
              <remote-type>129</remote-type>
              <local-name>[BalanceOfPaymentsManualInUse]</local-name>
              <parent-name>[Country.csv_DAF13CFA1DD54EC99C1655F66529F7F3]</parent-name>
              <remote-alias>BalanceOfPaymentsManualInUse</remote-alias>
              <ordinal>18</ordinal>
              <family>Country.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Country.csv_DAF13CFA1DD54EC99C1655F66529F7F3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>ExternalDebtReportingStatus</remote-name>
              <remote-type>129</remote-type>
              <local-name>[ExternalDebtReportingStatus]</local-name>
              <parent-name>[Country.csv_DAF13CFA1DD54EC99C1655F66529F7F3]</parent-name>
              <remote-alias>ExternalDebtReportingStatus</remote-alias>
              <ordinal>19</ordinal>
              <family>Country.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Country.csv_DAF13CFA1DD54EC99C1655F66529F7F3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>SystemOfTrade</remote-name>
              <remote-type>129</remote-type>
              <local-name>[SystemOfTrade]</local-name>
              <parent-name>[Country.csv_DAF13CFA1DD54EC99C1655F66529F7F3]</parent-name>
              <remote-alias>SystemOfTrade</remote-alias>
              <ordinal>20</ordinal>
              <family>Country.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Country.csv_DAF13CFA1DD54EC99C1655F66529F7F3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>GovernmentAccountingConcept</remote-name>
              <remote-type>129</remote-type>
              <local-name>[GovernmentAccountingConcept]</local-name>
              <parent-name>[Country.csv_DAF13CFA1DD54EC99C1655F66529F7F3]</parent-name>
              <remote-alias>GovernmentAccountingConcept</remote-alias>
              <ordinal>21</ordinal>
              <family>Country.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Country.csv_DAF13CFA1DD54EC99C1655F66529F7F3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>ImfDataDisseminationStandard</remote-name>
              <remote-type>129</remote-type>
              <local-name>[ImfDataDisseminationStandard]</local-name>
              <parent-name>[Country.csv_DAF13CFA1DD54EC99C1655F66529F7F3]</parent-name>
              <remote-alias>ImfDataDisseminationStandard</remote-alias>
              <ordinal>22</ordinal>
              <family>Country.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Country.csv_DAF13CFA1DD54EC99C1655F66529F7F3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>LatestPopulationCensus</remote-name>
              <remote-type>20</remote-type>
              <local-name>[LatestPopulationCensus]</local-name>
              <parent-name>[Country.csv_DAF13CFA1DD54EC99C1655F66529F7F3]</parent-name>
              <remote-alias>LatestPopulationCensus</remote-alias>
              <ordinal>23</ordinal>
              <family>Country.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>23</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Country.csv_DAF13CFA1DD54EC99C1655F66529F7F3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>LatestHouseholdSurvey</remote-name>
              <remote-type>129</remote-type>
              <local-name>[LatestHouseholdSurvey]</local-name>
              <parent-name>[Country.csv_DAF13CFA1DD54EC99C1655F66529F7F3]</parent-name>
              <remote-alias>LatestHouseholdSurvey</remote-alias>
              <ordinal>24</ordinal>
              <family>Country.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>65</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Country.csv_DAF13CFA1DD54EC99C1655F66529F7F3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>SourceOfMostRecentIncomeAndExpenditureData</remote-name>
              <remote-type>129</remote-type>
              <local-name>[SourceOfMostRecentIncomeAndExpenditureData]</local-name>
              <parent-name>[Country.csv_DAF13CFA1DD54EC99C1655F66529F7F3]</parent-name>
              <remote-alias>SourceOfMostRecentIncomeAndExpenditureData</remote-alias>
              <ordinal>25</ordinal>
              <family>Country.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>65</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Country.csv_DAF13CFA1DD54EC99C1655F66529F7F3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>VitalRegistrationComplete</remote-name>
              <remote-type>129</remote-type>
              <local-name>[VitalRegistrationComplete]</local-name>
              <parent-name>[Country.csv_DAF13CFA1DD54EC99C1655F66529F7F3]</parent-name>
              <remote-alias>VitalRegistrationComplete</remote-alias>
              <ordinal>26</ordinal>
              <family>Country.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Country.csv_DAF13CFA1DD54EC99C1655F66529F7F3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>LatestAgriculturalCensus</remote-name>
              <remote-type>129</remote-type>
              <local-name>[LatestAgriculturalCensus]</local-name>
              <parent-name>[Country.csv_DAF13CFA1DD54EC99C1655F66529F7F3]</parent-name>
              <remote-alias>LatestAgriculturalCensus</remote-alias>
              <ordinal>27</ordinal>
              <family>Country.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>36</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Country.csv_DAF13CFA1DD54EC99C1655F66529F7F3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>LatestIndustrialData</remote-name>
              <remote-type>5</remote-type>
              <local-name>[LatestIndustrialData]</local-name>
              <parent-name>[Country.csv_DAF13CFA1DD54EC99C1655F66529F7F3]</parent-name>
              <remote-alias>LatestIndustrialData</remote-alias>
              <ordinal>28</ordinal>
              <family>Country.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>12</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Country.csv_DAF13CFA1DD54EC99C1655F66529F7F3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>LatestTradeData</remote-name>
              <remote-type>5</remote-type>
              <local-name>[LatestTradeData]</local-name>
              <parent-name>[Country.csv_DAF13CFA1DD54EC99C1655F66529F7F3]</parent-name>
              <remote-alias>LatestTradeData</remote-alias>
              <ordinal>29</ordinal>
              <family>Country.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>15</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Country.csv_DAF13CFA1DD54EC99C1655F66529F7F3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>LatestWaterWithdrawalData</remote-name>
              <remote-type>5</remote-type>
              <local-name>[LatestWaterWithdrawalData]</local-name>
              <parent-name>[Country.csv_DAF13CFA1DD54EC99C1655F66529F7F3]</parent-name>
              <remote-alias>LatestWaterWithdrawalData</remote-alias>
              <ordinal>30</ordinal>
              <family>Country.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>22</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Country.csv_DAF13CFA1DD54EC99C1655F66529F7F3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>CountryName</remote-name>
              <remote-type>129</remote-type>
              <local-name>[CountryName]</local-name>
              <parent-name>[Indicators.csv_849BCA2D414E49F18C9AFD608CBAF4EF]</parent-name>
              <remote-alias>CountryName</remote-alias>
              <ordinal>31</ordinal>
              <family>Indicators.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>247</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Indicators.csv_849BCA2D414E49F18C9AFD608CBAF4EF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>CountryCode</remote-name>
              <remote-type>129</remote-type>
              <local-name>[CountryCode (Indicators.csv)]</local-name>
              <parent-name>[Indicators.csv_849BCA2D414E49F18C9AFD608CBAF4EF]</parent-name>
              <remote-alias>CountryCode</remote-alias>
              <ordinal>32</ordinal>
              <family>Indicators.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>247</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Indicators.csv_849BCA2D414E49F18C9AFD608CBAF4EF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>IndicatorName</remote-name>
              <remote-type>129</remote-type>
              <local-name>[IndicatorName]</local-name>
              <parent-name>[Indicators.csv_849BCA2D414E49F18C9AFD608CBAF4EF]</parent-name>
              <remote-alias>IndicatorName</remote-alias>
              <ordinal>33</ordinal>
              <family>Indicators.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1830</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Indicators.csv_849BCA2D414E49F18C9AFD608CBAF4EF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>IndicatorCode</remote-name>
              <remote-type>129</remote-type>
              <local-name>[IndicatorCode]</local-name>
              <parent-name>[Indicators.csv_849BCA2D414E49F18C9AFD608CBAF4EF]</parent-name>
              <remote-alias>IndicatorCode</remote-alias>
              <ordinal>34</ordinal>
              <family>Indicators.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1830</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Indicators.csv_849BCA2D414E49F18C9AFD608CBAF4EF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Year</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Year]</local-name>
              <parent-name>[Indicators.csv_849BCA2D414E49F18C9AFD608CBAF4EF]</parent-name>
              <remote-alias>Year</remote-alias>
              <ordinal>35</ordinal>
              <family>Indicators.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>56</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Indicators.csv_849BCA2D414E49F18C9AFD608CBAF4EF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Value</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Value]</local-name>
              <parent-name>[Indicators.csv_849BCA2D414E49F18C9AFD608CBAF4EF]</parent-name>
              <remote-alias>Value</remote-alias>
              <ordinal>36</ordinal>
              <family>Indicators.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1138282</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Indicators.csv_849BCA2D414E49F18C9AFD608CBAF4EF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:CountryName:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Brunei Darussalam&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Euro area&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Middle East &amp; North Africa (developing only)&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;OECD members&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;St. Martin (French part)&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;East Asia &amp; Pacific (developing only)&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Latin America &amp; Caribbean (all income levels)&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Russian Federation&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Yemen, Rep.&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cabo Verde&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Faeroe Islands&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Heavily indebted poor countries (HIPC)&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lower middle income&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Europe &amp; Central Asia (all income levels)&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Middle income&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;St. Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tuvalu&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Kyrgyz Republic&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Small states&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Channel Islands&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Latin America &amp; Caribbean (developing only)&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Puerto Rico&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Timor-Leste&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Virgin Islands (U.S.)&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Caribbean small states&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Slovak Republic&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Congo, Dem. Rep.&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Guam&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Micronesia, Fed. Sts.&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Northern Mariana Islands&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;St. Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;High income&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Palau&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bahamas, The&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Czech Republic&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;High income: nonOECD&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Korea, Dem. Rep.&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Macao SAR, China&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Swaziland&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Hong Kong SAR, China&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Syrian Arab Republic&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Central Europe and the Baltics&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;East Asia &amp; Pacific (all income levels)&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Gambia, The&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Lao PDR&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Venezuela, RB&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Europe &amp; Central Asia (developing only)&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Low &amp; middle income&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Other small states&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sub-Saharan Africa (all income levels)&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Arab World&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Congo, Rep.&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Middle East &amp; North Africa (all income levels)&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;St. Lucia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Egypt, Arab Rep.&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Iran, Islamic Rep.&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;South Asia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;West Bank and Gaza&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Fragile and conflict affected situations&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;High income: OECD&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Korea, Rep.&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Macedonia, FYR&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sint Maarten (Dutch part)&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Upper middle income&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;European Union&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Low income&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Pacific island small states&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sub-Saharan Africa (developing only)&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;American Samoa&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Least developed countries: UN classification&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;World&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United Kingdom&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Country.csv' id='Country.csv_DAF13CFA1DD54EC99C1655F66529F7F3'>
            <properties context=''>
              <relation connection='textscan.0aeitup0mj5xhw18f5yec1ltdwpd' name='Country.csv' table='[Country#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_GB' separator=','>
                  <column datatype='string' name='CountryCode' ordinal='0' />
                  <column datatype='string' name='ShortName' ordinal='1' />
                  <column datatype='string' name='TableName' ordinal='2' />
                  <column datatype='string' name='LongName' ordinal='3' />
                  <column datatype='string' name='Alpha2Code' ordinal='4' />
                  <column datatype='string' name='CurrencyUnit' ordinal='5' />
                  <column datatype='string' name='SpecialNotes' ordinal='6' />
                  <column datatype='string' name='Region' ordinal='7' />
                  <column datatype='string' name='IncomeGroup' ordinal='8' />
                  <column datatype='string' name='Wb2Code' ordinal='9' />
                  <column datatype='string' name='NationalAccountsBaseYear' ordinal='10' />
                  <column datatype='integer' name='NationalAccountsReferenceYear' ordinal='11' />
                  <column datatype='string' name='SnaPriceValuation' ordinal='12' />
                  <column datatype='string' name='LendingCategory' ordinal='13' />
                  <column datatype='string' name='OtherGroups' ordinal='14' />
                  <column datatype='string' name='SystemOfNationalAccounts' ordinal='15' />
                  <column datatype='string' name='AlternativeConversionFactor' ordinal='16' />
                  <column datatype='string' name='PppSurveyYear' ordinal='17' />
                  <column datatype='string' name='BalanceOfPaymentsManualInUse' ordinal='18' />
                  <column datatype='string' name='ExternalDebtReportingStatus' ordinal='19' />
                  <column datatype='string' name='SystemOfTrade' ordinal='20' />
                  <column datatype='string' name='GovernmentAccountingConcept' ordinal='21' />
                  <column datatype='string' name='ImfDataDisseminationStandard' ordinal='22' />
                  <column datatype='integer' name='LatestPopulationCensus' ordinal='23' />
                  <column datatype='string' name='LatestHouseholdSurvey' ordinal='24' />
                  <column datatype='string' name='SourceOfMostRecentIncomeAndExpenditureData' ordinal='25' />
                  <column datatype='string' name='VitalRegistrationComplete' ordinal='26' />
                  <column datatype='string' name='LatestAgriculturalCensus' ordinal='27' />
                  <column datatype='real' name='LatestIndustrialData' ordinal='28' />
                  <column datatype='real' name='LatestTradeData' ordinal='29' />
                  <column datatype='real' name='LatestWaterWithdrawalData' ordinal='30' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Country.csv_DAF13CFA1DD54EC99C1655F66529F7F3' table='[Extract].[Country.csv_DAF13CFA1DD54EC99C1655F66529F7F3]' type='table' />
            </properties>
          </object>
          <object caption='Indicators.csv' id='Indicators.csv_849BCA2D414E49F18C9AFD608CBAF4EF'>
            <properties context=''>
              <relation connection='textscan.03mg3hm16j0lvz10c1mgm12p88oz' name='Indicators.csv' table='[Indicators#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_GB' separator=','>
                  <column datatype='string' name='CountryName' ordinal='0' />
                  <column datatype='string' name='CountryCode' ordinal='1' />
                  <column datatype='string' name='IndicatorName' ordinal='2' />
                  <column datatype='string' name='IndicatorCode' ordinal='3' />
                  <column datatype='integer' name='Year' ordinal='4' />
                  <column datatype='real' name='Value' ordinal='5' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Indicators.csv_849BCA2D414E49F18C9AFD608CBAF4EF' table='[Extract].[Indicators.csv_849BCA2D414E49F18C9AFD608CBAF4EF]' type='table' />
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[CountryCode]' />
              <expression op='[CountryCode (Indicators.csv)]' />
            </expression>
            <first-end-point object-id='Country.csv_DAF13CFA1DD54EC99C1655F66529F7F3' />
            <second-end-point object-id='Indicators.csv_849BCA2D414E49F18C9AFD608CBAF4EF' />
          </relationship>
        </relationships>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='ARI Treatment'>
      <layout-options>
        <title>
          <formatted-text>
            <run>ARI Treatment (% of children under 5 taken to a health provider)
</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='CLASS' name='federated.0w6dtly0ocn04e1buwsbu0op0sv9' />
          </datasources>
          <datasource-dependencies datasource='federated.0w6dtly0ocn04e1buwsbu0op0sv9'>
            <column caption='Country Name' datatype='string' name='[CountryName]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Indicator Name' datatype='string' name='[IndicatorName]' role='dimension' type='nominal' />
            <column datatype='real' name='[Value]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Value]' derivation='Avg' name='[avg:Value:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CountryName]' derivation='None' name='[none:CountryName:nk]' pivot='key' type='nominal' />
            <column-instance column='[IndicatorName]' derivation='None' name='[none:IndicatorName:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0w6dtly0ocn04e1buwsbu0op0sv9].[avg:Value:qk]' included-values='in-range' />
          <filter class='categorical' column='[federated.0w6dtly0ocn04e1buwsbu0op0sv9].[none:CountryName:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Albania&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Andorra&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Austria&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Belarus&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Belgium&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Bosnia and Herzegovina&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Bulgaria&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Croatia&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Czech Republic&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Denmark&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Estonia&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Finland&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;France&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Germany&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Greece&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Hungary&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Iceland&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Ireland&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Italy&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Latvia&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Liechtenstein&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Lithuania&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Luxembourg&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Macedonia, FYR&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Malta&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Moldova&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Monaco&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Montenegro&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Netherlands&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Norway&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Poland&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Portugal&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Romania&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Russian Federation&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;San Marino&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Serbia&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Slovak Republic&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Spain&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Sweden&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Switzerland&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Ukraine&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;United Kingdom&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0w6dtly0ocn04e1buwsbu0op0sv9].[none:IndicatorName:nk]'>
            <groupfilter function='member' level='[none:IndicatorName:nk]' member='&quot;ARI treatment (\% of children under 5 taken to a health provider)&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.0w6dtly0ocn04e1buwsbu0op0sv9].[none:Year:qk]' included-values='in-range' />
          <slices>
            <column>[federated.0w6dtly0ocn04e1buwsbu0op0sv9].[none:IndicatorName:nk]</column>
            <column>[federated.0w6dtly0ocn04e1buwsbu0op0sv9].[none:CountryName:nk]</column>
            <column>[federated.0w6dtly0ocn04e1buwsbu0op0sv9].[none:Year:qk]</column>
            <column>[federated.0w6dtly0ocn04e1buwsbu0op0sv9].[avg:Value:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0w6dtly0ocn04e1buwsbu0op0sv9].[none:CountryName:nk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='1433' />
                <format attr='maxwidth' value='1433' />
                <format attr='minheight' value='883' />
                <format attr='maxheight' value='883' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0w6dtly0ocn04e1buwsbu0op0sv9].[avg:Value:qk]</rows>
        <cols>[federated.0w6dtly0ocn04e1buwsbu0op0sv9].[none:Year:qk]</cols>
      </table>
      <simple-id uuid='{D9DAEA5F-6DAB-4731-9BEA-94F10F4EB493}' />
    </worksheet>
    <worksheet name='Disease Children DPT'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Immunization, DPT (% of children ages 12-23 months)
</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='CLASS' name='federated.0w6dtly0ocn04e1buwsbu0op0sv9' />
          </datasources>
          <datasource-dependencies datasource='federated.0w6dtly0ocn04e1buwsbu0op0sv9'>
            <column caption='Country Name' datatype='string' name='[CountryName]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Indicator Name' datatype='string' name='[IndicatorName]' role='dimension' type='nominal' />
            <column datatype='real' name='[Value]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Value]' derivation='Avg' name='[avg:Value:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CountryName]' derivation='None' name='[none:CountryName:nk]' pivot='key' type='nominal' />
            <column-instance column='[IndicatorName]' derivation='None' name='[none:IndicatorName:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0w6dtly0ocn04e1buwsbu0op0sv9].[avg:Value:qk]' included-values='in-range' />
          <filter class='categorical' column='[federated.0w6dtly0ocn04e1buwsbu0op0sv9].[none:CountryName:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Albania&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Andorra&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Austria&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Belarus&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Belgium&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Bosnia and Herzegovina&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Bulgaria&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Croatia&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Czech Republic&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Denmark&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Estonia&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Finland&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;France&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Germany&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Greece&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Hungary&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Iceland&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Ireland&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Italy&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Latvia&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Liechtenstein&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Lithuania&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Luxembourg&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Macedonia, FYR&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Malta&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Moldova&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Monaco&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Montenegro&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Netherlands&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Norway&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Poland&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Portugal&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Romania&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Russian Federation&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;San Marino&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Serbia&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Slovak Republic&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Spain&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Sweden&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Switzerland&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Ukraine&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;United Kingdom&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0w6dtly0ocn04e1buwsbu0op0sv9].[none:IndicatorName:nk]'>
            <groupfilter function='member' level='[none:IndicatorName:nk]' member='&quot;Immunization, DPT (\% of children ages 12-23 months)&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.0w6dtly0ocn04e1buwsbu0op0sv9].[none:Year:qk]' included-values='in-range' />
          <slices>
            <column>[federated.0w6dtly0ocn04e1buwsbu0op0sv9].[none:IndicatorName:nk]</column>
            <column>[federated.0w6dtly0ocn04e1buwsbu0op0sv9].[none:CountryName:nk]</column>
            <column>[federated.0w6dtly0ocn04e1buwsbu0op0sv9].[none:Year:qk]</column>
            <column>[federated.0w6dtly0ocn04e1buwsbu0op0sv9].[avg:Value:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0w6dtly0ocn04e1buwsbu0op0sv9].[none:CountryName:nk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='1433' />
                <format attr='maxwidth' value='1433' />
                <format attr='minheight' value='883' />
                <format attr='maxheight' value='883' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0w6dtly0ocn04e1buwsbu0op0sv9].[avg:Value:qk]</rows>
        <cols>[federated.0w6dtly0ocn04e1buwsbu0op0sv9].[none:Year:qk]</cols>
      </table>
      <simple-id uuid='{1BBA39D4-842C-4604-9B87-B13F45067DBC}' />
    </worksheet>
    <worksheet name='Disease Children Measles'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Immunization, measles (% of children ages 12-23 months)
</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='CLASS' name='federated.0w6dtly0ocn04e1buwsbu0op0sv9' />
          </datasources>
          <datasource-dependencies datasource='federated.0w6dtly0ocn04e1buwsbu0op0sv9'>
            <column caption='Country Name' datatype='string' name='[CountryName]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Indicator Name' datatype='string' name='[IndicatorName]' role='dimension' type='nominal' />
            <column datatype='real' name='[Value]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Value]' derivation='Avg' name='[avg:Value:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CountryName]' derivation='None' name='[none:CountryName:nk]' pivot='key' type='nominal' />
            <column-instance column='[IndicatorName]' derivation='None' name='[none:IndicatorName:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0w6dtly0ocn04e1buwsbu0op0sv9].[avg:Value:qk]' included-values='in-range' />
          <filter class='categorical' column='[federated.0w6dtly0ocn04e1buwsbu0op0sv9].[none:CountryName:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Albania&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Andorra&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Austria&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Belarus&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Belgium&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Bosnia and Herzegovina&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Bulgaria&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Croatia&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Czech Republic&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Denmark&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Estonia&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Finland&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;France&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Germany&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Greece&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Hungary&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Iceland&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Ireland&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Italy&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Latvia&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Liechtenstein&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Lithuania&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Luxembourg&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Macedonia, FYR&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Malta&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Moldova&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Monaco&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Montenegro&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Netherlands&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Norway&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Poland&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Portugal&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Romania&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Russian Federation&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;San Marino&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Serbia&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Slovak Republic&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Spain&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Sweden&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Switzerland&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Ukraine&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;United Kingdom&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0w6dtly0ocn04e1buwsbu0op0sv9].[none:IndicatorName:nk]'>
            <groupfilter function='member' level='[none:IndicatorName:nk]' member='&quot;Immunization, measles (\% of children ages 12-23 months)&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.0w6dtly0ocn04e1buwsbu0op0sv9].[none:Year:qk]' included-values='in-range' />
          <slices>
            <column>[federated.0w6dtly0ocn04e1buwsbu0op0sv9].[none:IndicatorName:nk]</column>
            <column>[federated.0w6dtly0ocn04e1buwsbu0op0sv9].[none:CountryName:nk]</column>
            <column>[federated.0w6dtly0ocn04e1buwsbu0op0sv9].[none:Year:qk]</column>
            <column>[federated.0w6dtly0ocn04e1buwsbu0op0sv9].[avg:Value:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0w6dtly0ocn04e1buwsbu0op0sv9].[none:CountryName:nk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='1433' />
                <format attr='maxwidth' value='1433' />
                <format attr='minheight' value='883' />
                <format attr='maxheight' value='883' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0w6dtly0ocn04e1buwsbu0op0sv9].[avg:Value:qk]</rows>
        <cols>[federated.0w6dtly0ocn04e1buwsbu0op0sv9].[none:Year:qk]</cols>
      </table>
      <simple-id uuid='{96675546-9D8B-45F9-9613-2FD380DC4E79}' />
    </worksheet>
    <worksheet name='Prevalence of Anemia'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Prevalence of Anemia, weight for height (% of children under 5)
</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='CLASS' name='federated.0w6dtly0ocn04e1buwsbu0op0sv9' />
          </datasources>
          <datasource-dependencies datasource='federated.0w6dtly0ocn04e1buwsbu0op0sv9'>
            <column caption='Country Name' datatype='string' name='[CountryName]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Indicator Name' datatype='string' name='[IndicatorName]' role='dimension' type='nominal' />
            <column datatype='real' name='[Value]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Value]' derivation='Avg' name='[avg:Value:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CountryName]' derivation='None' name='[none:CountryName:nk]' pivot='key' type='nominal' />
            <column-instance column='[IndicatorName]' derivation='None' name='[none:IndicatorName:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0w6dtly0ocn04e1buwsbu0op0sv9].[avg:Value:qk]' included-values='in-range' />
          <filter class='categorical' column='[federated.0w6dtly0ocn04e1buwsbu0op0sv9].[none:CountryName:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Albania&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Andorra&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Austria&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Belarus&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Belgium&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Bosnia and Herzegovina&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Bulgaria&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Croatia&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Czech Republic&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Denmark&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Estonia&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Finland&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;France&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Germany&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Greece&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Hungary&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Iceland&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Ireland&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Italy&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Latvia&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Liechtenstein&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Lithuania&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Luxembourg&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Macedonia, FYR&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Malta&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Moldova&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Monaco&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Montenegro&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Netherlands&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Norway&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Poland&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Portugal&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Romania&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Russian Federation&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;San Marino&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Serbia&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Slovak Republic&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Spain&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Sweden&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Switzerland&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Ukraine&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;United Kingdom&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0w6dtly0ocn04e1buwsbu0op0sv9].[none:IndicatorName:nk]'>
            <groupfilter function='member' level='[none:IndicatorName:nk]' member='&quot;Prevalence of anemia among children (\% of children under 5)&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.0w6dtly0ocn04e1buwsbu0op0sv9].[none:Year:qk]' included-values='in-range' />
          <slices>
            <column>[federated.0w6dtly0ocn04e1buwsbu0op0sv9].[none:IndicatorName:nk]</column>
            <column>[federated.0w6dtly0ocn04e1buwsbu0op0sv9].[none:CountryName:nk]</column>
            <column>[federated.0w6dtly0ocn04e1buwsbu0op0sv9].[none:Year:qk]</column>
            <column>[federated.0w6dtly0ocn04e1buwsbu0op0sv9].[avg:Value:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0w6dtly0ocn04e1buwsbu0op0sv9].[none:CountryName:nk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='1433' />
                <format attr='maxwidth' value='1433' />
                <format attr='minheight' value='883' />
                <format attr='maxheight' value='883' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0w6dtly0ocn04e1buwsbu0op0sv9].[avg:Value:qk]</rows>
        <cols>[federated.0w6dtly0ocn04e1buwsbu0op0sv9].[none:Year:qk]</cols>
      </table>
      <simple-id uuid='{E453238D-051A-4BE7-A47F-2C624685D4A5}' />
    </worksheet>
    <worksheet name='Prevalence of Stunting'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Prevalence of stunting, weight for height (% of children under 5)
</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='CLASS' name='federated.0w6dtly0ocn04e1buwsbu0op0sv9' />
          </datasources>
          <datasource-dependencies datasource='federated.0w6dtly0ocn04e1buwsbu0op0sv9'>
            <column caption='Country Name' datatype='string' name='[CountryName]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Indicator Name' datatype='string' name='[IndicatorName]' role='dimension' type='nominal' />
            <column datatype='real' name='[Value]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Value]' derivation='Avg' name='[avg:Value:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CountryName]' derivation='None' name='[none:CountryName:nk]' pivot='key' type='nominal' />
            <column-instance column='[IndicatorName]' derivation='None' name='[none:IndicatorName:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0w6dtly0ocn04e1buwsbu0op0sv9].[avg:Value:qk]' included-values='in-range' />
          <filter class='categorical' column='[federated.0w6dtly0ocn04e1buwsbu0op0sv9].[none:CountryName:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Albania&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Andorra&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Austria&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Belarus&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Belgium&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Bosnia and Herzegovina&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Bulgaria&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Croatia&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Czech Republic&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Denmark&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Estonia&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Finland&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;France&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Germany&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Greece&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Hungary&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Iceland&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Ireland&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Italy&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Latvia&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Liechtenstein&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Lithuania&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Luxembourg&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Macedonia, FYR&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Malta&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Moldova&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Monaco&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Montenegro&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Netherlands&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Norway&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Poland&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Portugal&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Romania&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Russian Federation&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;San Marino&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Serbia&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Slovak Republic&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Spain&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Sweden&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Switzerland&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Ukraine&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;United Kingdom&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0w6dtly0ocn04e1buwsbu0op0sv9].[none:IndicatorName:nk]'>
            <groupfilter function='member' level='[none:IndicatorName:nk]' member='&quot;Prevalence of stunting, height for age (\% of children under 5)&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.0w6dtly0ocn04e1buwsbu0op0sv9].[none:Year:qk]' included-values='in-range' />
          <slices>
            <column>[federated.0w6dtly0ocn04e1buwsbu0op0sv9].[none:IndicatorName:nk]</column>
            <column>[federated.0w6dtly0ocn04e1buwsbu0op0sv9].[none:CountryName:nk]</column>
            <column>[federated.0w6dtly0ocn04e1buwsbu0op0sv9].[none:Year:qk]</column>
            <column>[federated.0w6dtly0ocn04e1buwsbu0op0sv9].[avg:Value:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0w6dtly0ocn04e1buwsbu0op0sv9].[none:CountryName:nk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='1433' />
                <format attr='maxwidth' value='1433' />
                <format attr='minheight' value='883' />
                <format attr='maxheight' value='883' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0w6dtly0ocn04e1buwsbu0op0sv9].[avg:Value:qk]</rows>
        <cols>[federated.0w6dtly0ocn04e1buwsbu0op0sv9].[none:Year:qk]</cols>
      </table>
      <simple-id uuid='{40EE5400-B00C-417A-B23B-1F7320D6F620}' />
    </worksheet>
    <worksheet name='Prevalence of overweight'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Prevalence of overweight, weight for height (% of children under 5)
</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='CLASS' name='federated.0w6dtly0ocn04e1buwsbu0op0sv9' />
          </datasources>
          <datasource-dependencies datasource='federated.0w6dtly0ocn04e1buwsbu0op0sv9'>
            <column caption='Country Name' datatype='string' name='[CountryName]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Indicator Name' datatype='string' name='[IndicatorName]' role='dimension' type='nominal' />
            <column datatype='real' name='[Value]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Value]' derivation='Avg' name='[avg:Value:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CountryName]' derivation='None' name='[none:CountryName:nk]' pivot='key' type='nominal' />
            <column-instance column='[IndicatorName]' derivation='None' name='[none:IndicatorName:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0w6dtly0ocn04e1buwsbu0op0sv9].[avg:Value:qk]' included-values='in-range' />
          <filter class='categorical' column='[federated.0w6dtly0ocn04e1buwsbu0op0sv9].[none:CountryName:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Albania&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Andorra&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Austria&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Belarus&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Belgium&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Bosnia and Herzegovina&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Bulgaria&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Croatia&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Czech Republic&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Denmark&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Estonia&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Finland&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;France&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Germany&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Greece&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Hungary&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Iceland&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Ireland&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Italy&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Latvia&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Liechtenstein&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Lithuania&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Luxembourg&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Macedonia, FYR&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Malta&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Moldova&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Monaco&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Montenegro&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Netherlands&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Norway&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Poland&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Portugal&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Romania&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Russian Federation&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;San Marino&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Serbia&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Slovak Republic&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Spain&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Sweden&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Switzerland&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Ukraine&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;United Kingdom&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0w6dtly0ocn04e1buwsbu0op0sv9].[none:IndicatorName:nk]'>
            <groupfilter function='member' level='[none:IndicatorName:nk]' member='&quot;Prevalence of overweight, weight for height (\% of children under 5)&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.0w6dtly0ocn04e1buwsbu0op0sv9].[none:Year:qk]' included-values='in-range' />
          <slices>
            <column>[federated.0w6dtly0ocn04e1buwsbu0op0sv9].[none:IndicatorName:nk]</column>
            <column>[federated.0w6dtly0ocn04e1buwsbu0op0sv9].[none:CountryName:nk]</column>
            <column>[federated.0w6dtly0ocn04e1buwsbu0op0sv9].[none:Year:qk]</column>
            <column>[federated.0w6dtly0ocn04e1buwsbu0op0sv9].[avg:Value:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0w6dtly0ocn04e1buwsbu0op0sv9].[none:CountryName:nk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='1433' />
                <format attr='maxwidth' value='1433' />
                <format attr='minheight' value='883' />
                <format attr='maxheight' value='883' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0w6dtly0ocn04e1buwsbu0op0sv9].[avg:Value:qk]</rows>
        <cols>[federated.0w6dtly0ocn04e1buwsbu0op0sv9].[none:Year:qk]</cols>
      </table>
      <simple-id uuid='{ED08CBD5-2F46-4791-93E3-824D06541E76}' />
    </worksheet>
    <worksheet name='Prevalence of underweight'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Prevalence of underweight, weight for height (% of children under 5)
</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='CLASS' name='federated.0w6dtly0ocn04e1buwsbu0op0sv9' />
          </datasources>
          <datasource-dependencies datasource='federated.0w6dtly0ocn04e1buwsbu0op0sv9'>
            <column caption='Country Name' datatype='string' name='[CountryName]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Indicator Name' datatype='string' name='[IndicatorName]' role='dimension' type='nominal' />
            <column datatype='real' name='[Value]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Value]' derivation='Avg' name='[avg:Value:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CountryName]' derivation='None' name='[none:CountryName:nk]' pivot='key' type='nominal' />
            <column-instance column='[IndicatorName]' derivation='None' name='[none:IndicatorName:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0w6dtly0ocn04e1buwsbu0op0sv9].[avg:Value:qk]' included-values='in-range' />
          <filter class='categorical' column='[federated.0w6dtly0ocn04e1buwsbu0op0sv9].[none:CountryName:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Albania&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Andorra&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Austria&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Belarus&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Belgium&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Bosnia and Herzegovina&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Bulgaria&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Croatia&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Czech Republic&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Denmark&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Estonia&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Finland&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;France&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Germany&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Greece&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Hungary&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Iceland&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Ireland&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Italy&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Latvia&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Liechtenstein&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Lithuania&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Luxembourg&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Macedonia, FYR&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Malta&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Moldova&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Monaco&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Montenegro&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Netherlands&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Norway&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Poland&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Portugal&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Romania&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Russian Federation&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;San Marino&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Serbia&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Slovak Republic&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Spain&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Sweden&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Switzerland&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Ukraine&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;United Kingdom&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0w6dtly0ocn04e1buwsbu0op0sv9].[none:IndicatorName:nk]'>
            <groupfilter function='member' level='[none:IndicatorName:nk]' member='&quot;Prevalence of underweight, weight for age (\% of children under 5)&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.0w6dtly0ocn04e1buwsbu0op0sv9].[none:Year:qk]' included-values='in-range' />
          <slices>
            <column>[federated.0w6dtly0ocn04e1buwsbu0op0sv9].[none:IndicatorName:nk]</column>
            <column>[federated.0w6dtly0ocn04e1buwsbu0op0sv9].[none:CountryName:nk]</column>
            <column>[federated.0w6dtly0ocn04e1buwsbu0op0sv9].[none:Year:qk]</column>
            <column>[federated.0w6dtly0ocn04e1buwsbu0op0sv9].[avg:Value:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0w6dtly0ocn04e1buwsbu0op0sv9].[none:CountryName:nk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='1433' />
                <format attr='maxwidth' value='1433' />
                <format attr='minheight' value='883' />
                <format attr='maxheight' value='883' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0w6dtly0ocn04e1buwsbu0op0sv9].[avg:Value:qk]</rows>
        <cols>[federated.0w6dtly0ocn04e1buwsbu0op0sv9].[none:Year:qk]</cols>
      </table>
      <simple-id uuid='{7D96DB35-0549-44EC-A37A-80821D70D151}' />
    </worksheet>
    <worksheet name='Prevalence of wasting'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Prevalence of wasting, weight for height (% of children under 5)
</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='CLASS' name='federated.0w6dtly0ocn04e1buwsbu0op0sv9' />
          </datasources>
          <datasource-dependencies datasource='federated.0w6dtly0ocn04e1buwsbu0op0sv9'>
            <column caption='Country Name' datatype='string' name='[CountryName]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Indicator Name' datatype='string' name='[IndicatorName]' role='dimension' type='nominal' />
            <column datatype='real' name='[Value]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Value]' derivation='Avg' name='[avg:Value:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CountryName]' derivation='None' name='[none:CountryName:nk]' pivot='key' type='nominal' />
            <column-instance column='[IndicatorName]' derivation='None' name='[none:IndicatorName:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0w6dtly0ocn04e1buwsbu0op0sv9].[avg:Value:qk]' included-values='in-range' />
          <filter class='categorical' column='[federated.0w6dtly0ocn04e1buwsbu0op0sv9].[none:CountryName:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Albania&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Andorra&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Austria&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Belarus&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Belgium&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Bosnia and Herzegovina&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Bulgaria&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Croatia&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Czech Republic&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Denmark&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Estonia&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Finland&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;France&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Germany&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Greece&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Hungary&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Iceland&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Ireland&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Italy&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Latvia&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Liechtenstein&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Lithuania&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Luxembourg&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Macedonia, FYR&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Malta&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Moldova&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Monaco&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Montenegro&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Netherlands&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Norway&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Poland&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Portugal&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Romania&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Russian Federation&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;San Marino&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Serbia&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Slovak Republic&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Spain&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Sweden&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Switzerland&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Ukraine&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;United Kingdom&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0w6dtly0ocn04e1buwsbu0op0sv9].[none:IndicatorName:nk]'>
            <groupfilter function='member' level='[none:IndicatorName:nk]' member='&quot;Prevalence of wasting, weight for height (\% of children under 5)&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.0w6dtly0ocn04e1buwsbu0op0sv9].[none:Year:qk]' included-values='in-range' />
          <slices>
            <column>[federated.0w6dtly0ocn04e1buwsbu0op0sv9].[none:IndicatorName:nk]</column>
            <column>[federated.0w6dtly0ocn04e1buwsbu0op0sv9].[none:CountryName:nk]</column>
            <column>[federated.0w6dtly0ocn04e1buwsbu0op0sv9].[none:Year:qk]</column>
            <column>[federated.0w6dtly0ocn04e1buwsbu0op0sv9].[avg:Value:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0w6dtly0ocn04e1buwsbu0op0sv9].[none:CountryName:nk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='1433' />
                <format attr='maxwidth' value='1433' />
                <format attr='minheight' value='883' />
                <format attr='maxheight' value='883' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0w6dtly0ocn04e1buwsbu0op0sv9].[avg:Value:qk]</rows>
        <cols>[federated.0w6dtly0ocn04e1buwsbu0op0sv9].[none:Year:qk]</cols>
      </table>
      <simple-id uuid='{612F6391-4331-4440-BFA2-5D3113F8F122}' />
    </worksheet>
    <worksheet name='children (0-14) living with HIV'>
      <layout-options>
        <title>
          <formatted-text>
            <run>children (0-14) living with HIV</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='CLASS' name='federated.0w6dtly0ocn04e1buwsbu0op0sv9' />
          </datasources>
          <datasource-dependencies datasource='federated.0w6dtly0ocn04e1buwsbu0op0sv9'>
            <column caption='Country Name' datatype='string' name='[CountryName]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Indicator Name' datatype='string' name='[IndicatorName]' role='dimension' type='nominal' />
            <column datatype='real' name='[Value]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Value]' derivation='Avg' name='[avg:Value:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CountryName]' derivation='None' name='[none:CountryName:nk]' pivot='key' type='nominal' />
            <column-instance column='[IndicatorName]' derivation='None' name='[none:IndicatorName:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0w6dtly0ocn04e1buwsbu0op0sv9].[avg:Value:qk]' included-values='in-range' />
          <filter class='categorical' column='[federated.0w6dtly0ocn04e1buwsbu0op0sv9].[none:CountryName:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Albania&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Andorra&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Austria&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Belarus&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Belgium&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Bosnia and Herzegovina&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Bulgaria&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Croatia&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Czech Republic&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Denmark&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Estonia&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Finland&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;France&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Germany&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Greece&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Hungary&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Iceland&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Ireland&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Italy&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Latvia&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Liechtenstein&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Lithuania&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Luxembourg&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Macedonia, FYR&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Malta&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Moldova&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Monaco&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Montenegro&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Netherlands&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Norway&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Poland&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Portugal&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Romania&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Russian Federation&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;San Marino&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Serbia&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Slovak Republic&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Spain&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Sweden&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Switzerland&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;Ukraine&quot;' />
              <groupfilter function='member' level='[none:CountryName:nk]' member='&quot;United Kingdom&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0w6dtly0ocn04e1buwsbu0op0sv9].[none:IndicatorName:nk]'>
            <groupfilter function='member' level='[none:IndicatorName:nk]' member='&quot;Children (0-14) living with HIV&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.0w6dtly0ocn04e1buwsbu0op0sv9].[none:Year:qk]' included-values='in-range' />
          <slices>
            <column>[federated.0w6dtly0ocn04e1buwsbu0op0sv9].[none:IndicatorName:nk]</column>
            <column>[federated.0w6dtly0ocn04e1buwsbu0op0sv9].[none:CountryName:nk]</column>
            <column>[federated.0w6dtly0ocn04e1buwsbu0op0sv9].[none:Year:qk]</column>
            <column>[federated.0w6dtly0ocn04e1buwsbu0op0sv9].[avg:Value:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0w6dtly0ocn04e1buwsbu0op0sv9].[none:CountryName:nk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='1433' />
                <format attr='maxwidth' value='1433' />
                <format attr='minheight' value='883' />
                <format attr='maxheight' value='883' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0w6dtly0ocn04e1buwsbu0op0sv9].[avg:Value:qk]</rows>
        <cols>[federated.0w6dtly0ocn04e1buwsbu0op0sv9].[none:Year:qk]</cols>
      </table>
      <simple-id uuid='{ED880D29-9ED8-4521-A070-5227479FF244}' />
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' maximized='true' name='Disease Children DPT'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0w6dtly0ocn04e1buwsbu0op0sv9].[avg:Value:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card param='[federated.0w6dtly0ocn04e1buwsbu0op0sv9].[none:Year:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='0' param='[federated.0w6dtly0ocn04e1buwsbu0op0sv9].[none:CountryName:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{828B0BBB-FAF7-48CD-A37D-24B5DF987628}' />
    </window>
    <window class='worksheet' name='Disease Children Measles'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0w6dtly0ocn04e1buwsbu0op0sv9].[avg:Value:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card param='[federated.0w6dtly0ocn04e1buwsbu0op0sv9].[none:Year:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='0' param='[federated.0w6dtly0ocn04e1buwsbu0op0sv9].[none:CountryName:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{3BF9DFC1-C1D5-466A-8EEB-008AF9F2C7F5}' />
    </window>
    <window class='worksheet' name='Prevalence of overweight'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0w6dtly0ocn04e1buwsbu0op0sv9].[avg:Value:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card param='[federated.0w6dtly0ocn04e1buwsbu0op0sv9].[none:Year:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='0' param='[federated.0w6dtly0ocn04e1buwsbu0op0sv9].[none:CountryName:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{B1CB090C-CC39-40E6-9513-A9A38F940B4F}' />
    </window>
    <window class='worksheet' name='Prevalence of wasting'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0w6dtly0ocn04e1buwsbu0op0sv9].[avg:Value:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card param='[federated.0w6dtly0ocn04e1buwsbu0op0sv9].[none:Year:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='0' param='[federated.0w6dtly0ocn04e1buwsbu0op0sv9].[none:CountryName:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{2F3AD39A-8272-4A3D-863D-CE429D06B4C2}' />
    </window>
    <window class='worksheet' name='Prevalence of underweight'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0w6dtly0ocn04e1buwsbu0op0sv9].[avg:Value:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card param='[federated.0w6dtly0ocn04e1buwsbu0op0sv9].[none:Year:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='0' param='[federated.0w6dtly0ocn04e1buwsbu0op0sv9].[none:CountryName:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{64645CB6-C631-4F35-8C4A-19AC9DF96CC3}' />
    </window>
    <window class='worksheet' name='Prevalence of Stunting'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0w6dtly0ocn04e1buwsbu0op0sv9].[avg:Value:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card param='[federated.0w6dtly0ocn04e1buwsbu0op0sv9].[none:Year:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='0' param='[federated.0w6dtly0ocn04e1buwsbu0op0sv9].[none:CountryName:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{BFF677F0-58CF-40BD-A3E7-4F062E62DD2D}' />
    </window>
    <window class='worksheet' name='Prevalence of Anemia'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0w6dtly0ocn04e1buwsbu0op0sv9].[avg:Value:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card param='[federated.0w6dtly0ocn04e1buwsbu0op0sv9].[none:Year:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='0' param='[federated.0w6dtly0ocn04e1buwsbu0op0sv9].[none:CountryName:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{09920443-9D3D-484D-A177-F4BE79DFD6C0}' />
    </window>
    <window class='worksheet' name='children (0-14) living with HIV'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0w6dtly0ocn04e1buwsbu0op0sv9].[avg:Value:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card param='[federated.0w6dtly0ocn04e1buwsbu0op0sv9].[none:Year:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='0' param='[federated.0w6dtly0ocn04e1buwsbu0op0sv9].[none:CountryName:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{48B89804-5A35-415B-BA4E-EACB7739B20E}' />
    </window>
    <window class='worksheet' name='ARI Treatment'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0w6dtly0ocn04e1buwsbu0op0sv9].[avg:Value:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card param='[federated.0w6dtly0ocn04e1buwsbu0op0sv9].[none:Year:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='0' param='[federated.0w6dtly0ocn04e1buwsbu0op0sv9].[none:CountryName:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{4197537D-3244-467D-8EA3-DB16D18DEA32}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='ARI Treatment' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Disease Children DPT' width='192'>
      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
      Ivg6uX8AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Disease Children Measles' width='192'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Prevalence of Anemia' width='192'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Prevalence of Stunting' width='192'>
      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
      gg==
    </thumbnail>
    <thumbnail height='192' name='Prevalence of overweight' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Prevalence of underweight' width='192'>
      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
      ARCn/R+e3/WSUxyqVwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Prevalence of wasting' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='children (0-14) living with HIV' width='192'>
      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
      3/Hh0D5pXP4/rwfeTp7EbvgAAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
